{"version":3,"sources":["TodoApp.js","TodosFilter.js","Footer.js","filteredForField.js","Todo.js","TodoList.js","App.js","index.js"],"names":["TodoApp","state","title","handleSubmit","event","preventDefault","onSubmit","_this","props","setState","handleChange","_event$target","target","name","value","Object","defineProperty","react_default","a","createElement","className","this","htmlFor","placeholder","onChange","type","React","Component","TodosFilter","_ref","handleFilterBy","sortField","Fragment","classNames","selected","onClick","href","activeClassName","Footer","todos","isCompletedHide","destroyAllComplete","concat","filter","todo","completed","length","src_TodosFilter","filteredForField","callBack","active","toConsumableArray","Todo","item","toggle","deleteTodo","id","checked","defaultProps","TodolList","handleChackAll","map","src_Todo","key","App","sortFieldEvent","statusAllTodo","addTodo","prevState","Date","now","field","handleToggle","task","find","objectSpread","_this$state","console","log","todosVisible","src_TodoApp","TodoList","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.52cf4e29.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.title);\n\n    this.setState({\n      title: '',\n    });\n  }\n\n    handleChange = (event) => {\n      const { name, value } = event.target;\n\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    render() {\n      return (\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label\n              className=\"new-todo\"\n              htmlFor=\"new-todo-title\"\n            >\n              <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                onChange={this.handleChange}\n                value={this.state.title}\n                name=\"title\"\n                type=\"text\"\n              />\n            </label>\n            <button\n              type=\"submit\"\n              className=\"buttonHide\"\n            >\n          submit\n            </button>\n          </form>\n        </header>\n      );\n    }\n}\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodosFilter = ({ handleFilterBy, sortField }) => (\n  <>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'active',\n        })}\n        onClick={() => handleFilterBy('active')}\n        href=\"#/\"\n      >\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'all',\n        })}\n        activeClassName={sortField}\n        href=\"#/active\"\n        onClick={() => handleFilterBy('all')}\n      >\n      All\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'completed',\n        })}\n        href=\"#/completed\"\n        onClick={() => handleFilterBy('completed')}\n      >\n    Completed\n      </a>\n    </li>\n  </>\n);\n\nTodosFilter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\n\nconst Footer = ({\n  handleFilterBy, sortField, todos, isCompletedHide, destroyAllComplete,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${todos.filter(todo => !todo.completed).length}\n      items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <TodosFilter\n        sortField={sortField}\n        handleFilterBy={handleFilterBy}\n      />\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={destroyAllComplete}\n    >\n      {isCompletedHide ? 'Clear completed' : ''}\n    </button>\n  </footer>\n\n);\n\nFooter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n  isCompletedHide: PropTypes.number.isRequired,\n  destroyAllComplete: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","const filteredForField = (todos, sortField) => {\n  if (sortField === 'all') {\n    return todos;\n  }\n\n  const callBackSort = {\n    active: a => !a.completed,\n    completed: a => a.completed,\n  };\n  const callBack = callBackSort[sortField];\n\n  return [...todos].filter(callBack);\n};\n\nexport default filteredForField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ item, toggle, deleteTodo }) => {\n  const { id, title, completed } = item;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={() => toggle(id)}\n          checked={completed}\n        />\n        <label htmlFor=\"todo-2\">{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)}\n        />\n        <p>{completed}</p>\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodolList = ({\n  toggle, deleteTodo, handleChackAll, todos,\n}) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      className=\"toggle-all\"\n      id=\"toggle-all\"\n      onChange={handleChackAll}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          item={todo}\n          toggle={toggle}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodolList.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n  handleChackAll: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n};\n\nTodolList.defaultProps = {\n  toggle: null,\n};\n\nexport default TodolList;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nimport Footer from './Footer';\nimport filteredForField from './filteredForField';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortFieldEvent: 'all',\n    isCompletedHide: 0,\n    statusAllTodo: true,\n  }\n\n  addTodo = (title) => {\n    this.setState((prevState) => {\n      const todosAdd = [...prevState.todos,\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ];\n\n      return {\n        todos: todosAdd,\n      };\n    });\n  };\n\n  handleFilterBy = (field) => {\n    this.setState({\n      sortFieldEvent: field,\n    });\n  }\n\n  handleToggle = (id) => {\n    this.setState((prevState) => {\n      const task = prevState.todos.find(todo => todo.id === id);\n      task.completed = !task.completed;\n\n      if (task.completed) {\n        return {\n          isCompletedHide: 1,\n        };\n      }\n\n      return {\n        todos: prevState.todos,\n      };\n    });\n  }\n\n  handleChackAll = () => {\n    this.setState((prevState) => {\n      const todoChakAll = prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodo,\n      }\n      ));\n\n      return {\n        todos: todoChakAll,\n        isCompletedHide: 1,\n        statusAllTodo: !prevState.statusAllTodo,\n      };\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState((prevState) => {\n      const todosDelet = prevState.todos.filter(todo => todo.id !== id);\n\n      return {\n        todos: todosDelet,\n      };\n    });\n  }\n\n  destroyAllComplete = () => {\n    this.setState((prevState) => {\n      const todosActive = prevState.todos.filter(a => !a.completed);\n\n      return {\n        todos: todosActive,\n      };\n    });\n  }\n\n  render() {\n    const { todos, sortFieldEvent, isCompletedHide } = this.state;\n    console.log(todos);\n\n    const todosVisible = filteredForField(todos, sortFieldEvent);\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          onSubmit={this.addTodo}\n        />\n\n        <TodoList\n          toggle={this.handleToggle}\n          deleteTodo={this.deleteTodo}\n          handleChackAll={this.handleChackAll}\n          todos={todosVisible}\n        />\n        <Footer\n          sortField={sortFieldEvent}\n          handleFilterBy={this.handleFilterBy}\n          todos={todosVisible}\n          isCompletedHide={isCompletedHide}\n          destroyAllComplete={this.destroyAllComplete}\n        />\n      </section>\n    );\n  }\n}\n\n// const CachedTodoList = React.memo(TodoList);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}