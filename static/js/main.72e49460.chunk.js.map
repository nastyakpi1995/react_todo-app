{"version":3,"sources":["TodoApp.js","TodosFilter.js","Footer.js","filterFieldCaching.js","Todo.js","TodoList.js","App.js","index.js"],"names":["TodoApp","state","title","handleSubmit","event","preventDefault","onSubmit","_this","props","setState","handleChange","_event$target","target","name","value","Object","defineProperty","react_default","a","createElement","className","this","htmlFor","placeholder","onChange","type","React","Component","TodosFilter","_ref","handleFilterBy","sortField","Fragment","classNames","selected","onClick","href","activeClassName","Footer","todos","isCompletedHide","destroyAllComplete","concat","filter","todo","completed","length","src_TodosFilter","filteredForFieldWithCaching","callBack","active","Todo","activeRename","handleRename","handleStart","_this$props","renameTodo","id","_this$props2","toggle","deleteTodo","_this$state","checked","onDoubleClick","defaultProps","TodolList","handleChackAll","map","src_Todo","key","App","sortFieldEvent","statusAllTodo","addTodo","prevState","toConsumableArray","Date","now","field","handleToggle","task","find","objectSpread","localStorage","getItem","JSON","parse","setItem","stringify","todosVisible","filterFieldCaching","src_TodoApp","TodoList","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.72e49460.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.title);\n\n    this.setState({\n      title: '',\n    });\n  }\n\n    handleChange = (event) => {\n      const { name, value } = event.target;\n\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    render() {\n      return (\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label\n              className=\"new-todo\"\n              htmlFor=\"new-todo-title\"\n            >\n              <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                onChange={this.handleChange}\n                value={this.state.title}\n                name=\"title\"\n                type=\"text\"\n              />\n            </label>\n            <button\n              type=\"submit\"\n              className=\"buttonHide\"\n            >\n          submit\n            </button>\n          </form>\n        </header>\n      );\n    }\n}\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodosFilter = ({ handleFilterBy, sortField }) => (\n  <>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'active',\n        })}\n        onClick={() => handleFilterBy('active')}\n        href=\"#/\"\n      >\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'all',\n        })}\n        activeClassName={sortField}\n        href=\"#/active\"\n        onClick={() => handleFilterBy('all')}\n      >\n      All\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'completed',\n        })}\n        href=\"#/completed\"\n        onClick={() => handleFilterBy('completed')}\n      >\n    Completed\n      </a>\n    </li>\n  </>\n);\n\nTodosFilter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\n\nconst Footer = ({\n  handleFilterBy, sortField, todos, isCompletedHide, destroyAllComplete,\n}) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${todos.filter(todo => !todo.completed).length}\n        items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <TodosFilter\n        sortField={sortField}\n        handleFilterBy={handleFilterBy}\n      />\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={destroyAllComplete}\n    >\n      {isCompletedHide ? 'Clear completed' : ''}\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n  isCompletedHide: PropTypes.number.isRequired,\n  destroyAllComplete: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","const filteredForField = (todos, sortField) => {\n  if (sortField === 'all') {\n    return todos;\n  }\n\n  const callBackSort = {\n    active: a => !a.completed,\n    completed: a => a.completed,\n  };\n  const callBack = callBackSort[sortField];\n\n  return todos.filter(callBack);\n};\n\nconst filteredForFieldWithCaching = filteredForField;\n\nexport default filteredForFieldWithCaching;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Todo extends React.Component {\n  state = {\n    title: this.props.todo.title,\n    activeRename: false,\n  }\n\n  handleRename = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n    });\n  }\n\n  handleStart = () => {\n    this.setState({\n      activeRename: true,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { renameTodo, todo } = this.props;\n\n    if (this.state.title) {\n      renameTodo(this.state.title, todo.id);\n      this.setState({\n        activeRename: false,\n      });\n    }\n  }\n\n  render() {\n    const { todo, toggle, deleteTodo } = this.props;\n    const { id, completed } = todo;\n    const { activeRename, title } = this.state;\n\n    return (\n      <li className=\"todo\">\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={id}\n            onChange={() => toggle(id)}\n            checked={completed}\n          />\n          {\n            activeRename\n              ? (\n                <form\n                  onSubmit={this.handleSubmit}\n                >\n                  <input\n                    type=\"text\"\n                    onChange={this.handleRename}\n                    value={title}\n                    className=\"new-todo\"\n                  />\n                </form>\n              ) : (\n                <>\n                  <label\n                    onDoubleClick={this.handleStart}\n                    htmlFor=\"todo-2\"\n                  >\n                    {todo.title}\n                  </label>\n                  <button\n                    type=\"button\"\n                    className=\"destroy\"\n                    onClick={() => deleteTodo(id)}\n                  />\n                  <p>{completed}</p>\n                </>\n              )\n          }\n\n        </div>\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n  renameTodo: PropTypes.func.isRequired,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodolList = ({\n  toggle, deleteTodo, handleChackAll, todos, renameTodo,\n}) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      className=\"toggle-all\"\n      id=\"toggle-all\"\n      onChange={handleChackAll}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          toggle={toggle}\n          deleteTodo={deleteTodo}\n          renameTodo={renameTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodolList.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n  handleChackAll: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n  renameTodo: PropTypes.func.isRequired,\n};\n\nTodolList.defaultProps = {\n  toggle: null,\n};\n\nexport default TodolList;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nimport Footer from './Footer';\nimport filterFieldCaching from './filterFieldCaching';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortFieldEvent: 'all',\n    isCompletedHide: 0,\n    statusAllTodo: true,\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem('todos')) {\n      this.setState({\n        todos: JSON.parse(localStorage.getItem('todos')),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  addTodo = (title) => {\n    this.setState((prevState) => {\n      const todosAdd = [...prevState.todos,\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ];\n\n      return {\n        todos: todosAdd,\n      };\n    });\n  };\n\n  handleFilterBy = (field) => {\n    this.setState({\n      sortFieldEvent: field,\n    });\n  }\n\n  handleToggle = (id) => {\n    this.setState((prevState) => {\n      const task = prevState.todos.find(todo => todo.id === id);\n      task.completed = !task.completed;\n\n      if (task.completed) {\n        return {\n          isCompletedHide: 1,\n        };\n      }\n\n      return {\n        todos: prevState.todos,\n      };\n    });\n  }\n\n  handleChackAll = () => {\n    this.setState((prevState) => {\n      const todoChakAll = prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodo,\n      }\n      ));\n\n      return {\n        todos: todoChakAll,\n        isCompletedHide: 1,\n        statusAllTodo: !prevState.statusAllTodo,\n      };\n    });\n  }\n\n  renameTodo = (title, id) => {\n    this.setState((prevState) => {\n      const todos = prevState.todos\n        .map(todo => (todo.id === id\n          ? {\n            ...todo,\n            title,\n          }\n          : todo));\n      return {\n        todos,\n      };\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  destroyAllComplete = () => {\n    this.setState((prevState) => {\n      const todosActive = prevState.todos.filter(a => !a.completed);\n\n      return {\n        todos: todosActive,\n      };\n    });\n  }\n\n  render() {\n    const { todos, sortFieldEvent, isCompletedHide } = this.state;\n    const todosVisible = filterFieldCaching(todos, sortFieldEvent);\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          onSubmit={this.addTodo}\n        />\n\n        <TodoList\n          toggle={this.handleToggle}\n          deleteTodo={this.deleteTodo}\n          handleChackAll={this.handleChackAll}\n          todos={todosVisible}\n          renameTodo={this.renameTodo}\n        />\n        <Footer\n          sortField={sortFieldEvent}\n          handleFilterBy={this.handleFilterBy}\n          todos={todosVisible}\n          isCompletedHide={isCompletedHide}\n          destroyAllComplete={this.destroyAllComplete}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}