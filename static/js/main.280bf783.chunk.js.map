{"version":3,"sources":["TodoApp.js","TodosFilter.js","Footer.js","getSortFied.js","Todo.js","TodoList.js","App.js","index.js"],"names":["TodoApp","state","title","handleSubmit","event","preventDefault","onSubmit","_this","props","setState","handleChange","_event$target","target","name","value","Object","defineProperty","react_default","a","createElement","className","this","htmlFor","placeholder","onChange","type","React","Component","TodosFilter","_ref","handleFilterBy","sortField","Fragment","classNames","selected","onClick","href","activeClassName","Footer","todosVisible","isCompletedHide","destroyAllComplete","style","display","concat","filter","todo","completed","length","src_TodosFilter","getSortFied","todos","callBack","active","toConsumableArray","Todo","item","toggle","deleteTodo","id","checked","defaultProps","TodolList","handleChackAll","map","src_Todo","key","App","sortFieldEvent","statusAllTodo","addTodo","prevState","todosAdd","Date","now","handleToggle","find","objectSpread","todoChakAll","todosDelet","todosActive","_this$state","src_TodoApp","TodoList","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.280bf783.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.title);\n\n    this.setState({\n      title: '',\n    });\n  }\n\n    handleChange = (event) => {\n      const { name, value } = event.target;\n\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    render() {\n      return (\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label\n              className=\"new-todo\"\n              htmlFor=\"new-todo-title\"\n            >\n              <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                onChange={this.handleChange}\n                value={this.state.title}\n                name=\"title\"\n                type=\"text\"\n              />\n            </label>\n            <button\n              type=\"submit\"\n              className=\"buttonHide\"\n            >\n          submit\n            </button>\n          </form>\n        </header>\n      );\n    }\n}\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodosFilter = ({ handleFilterBy, sortField }) => (\n  <>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'active',\n        })}\n        onClick={() => handleFilterBy('active')}\n        href=\"#/\"\n      >\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'all',\n        })}\n        activeClassName={sortField}\n        href=\"#/active\"\n        onClick={() => handleFilterBy('all')}\n      >\n      All\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'completed',\n        })}\n        href=\"#/completed\"\n        onClick={() => handleFilterBy('completed')}\n      >\n    Completed\n      </a>\n    </li>\n  </>\n);\n\nTodosFilter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\n\nconst Footer = ({\n  handleFilterBy, sortField, todosVisible, isCompletedHide, destroyAllComplete,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {`${todosVisible.filter(todo => !todo.completed).length}\n      items left`}\n    </span>\n\n    <ul className=\"filters\">\n      <TodosFilter\n        sortField={sortField}\n        handleFilterBy={handleFilterBy}\n      />\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={destroyAllComplete}\n    >\n      {isCompletedHide ? 'Clear completed' : ''}\n    </button>\n  </footer>\n\n);\n\nFooter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n  todosVisible: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n  isCompletedHide: PropTypes.number.isRequired,\n  destroyAllComplete: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","const getSortFied = (todos, sortField) => {\n  if (sortField === 'all') {\n    return todos;\n  }\n\n  const callBackSort = {\n    active: a => !a.completed,\n    completed: a => a.completed,\n  };\n  const callBack = callBackSort[sortField];\n\n  return [...todos].filter(callBack);\n};\n\nexport default getSortFied;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ item, toggle, deleteTodo }) => {\n  const { id, title, completed } = item;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={() => toggle(id)}\n          checked={completed}\n        />\n        <label htmlFor=\"todo-2\">{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)}\n        />\n        <p>{completed}</p>\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodolList = ({\n  toggle, deleteTodo, handleChackAll, todosVisible,\n}) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      className=\"toggle-all\"\n      id=\"toggle-all\"\n      onChange={handleChackAll}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todosVisible.map(todo => (\n        <Todo\n          key={todo.id}\n          item={todo}\n          toggle={toggle}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodolList.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n  handleChackAll: PropTypes.func.isRequired,\n  todosVisible: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n};\n\nTodolList.defaultProps = {\n  toggle: null,\n};\n\nexport default TodolList;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nimport Footer from './Footer';\nimport getSortFied from './getSortFied';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    todosVisible: [],\n    todos: [],\n    sortFieldEvent: 'all',\n    sortField: 'all',\n    isCompletedHide: 0,\n    statusAllTodo: true,\n  }\n\n  addTodo = (title) => {\n    this.setState((prevState) => {\n      const todosAdd = [...prevState.todos,\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ];\n\n      return {\n        todosVisible: getSortFied(todosAdd, prevState.sortField),\n        todos: todosAdd,\n      };\n    });\n  };\n\n  handleFilterBy = (sortField) => {\n    this.setState(prevState => ({\n      sortFieldEvent: sortField,\n      todosVisible: getSortFied(prevState.todos, sortField),\n      sortField,\n    }));\n  }\n\n  handleToggle = (id) => {\n    this.setState((prevState) => {\n      const task = prevState.todosVisible\n        .find(todo => todo.id === id\n          && { ...todo, completed: !prevState.completed });\n\n      if (task.completed) {\n        return {\n          isCompletedHide: 1,\n        };\n      }\n\n      return {\n        todosVisible: prevState.todosVisible,\n      };\n    });\n  }\n\n  handleChackAll = () => {\n    this.setState((prevState) => {\n      const todoChakAll = prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodo,\n      }\n      ));\n\n      return {\n        todos: todoChakAll,\n        todosVisible: getSortFied(todoChakAll, prevState.sortField),\n        isCompletedHide: 1,\n        statusAllTodo: !prevState.statusAllTodo,\n      };\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState((prevState) => {\n      const todosDelet = prevState.todos.filter(todo => todo.id !== id);\n      return {\n        todos: todosDelet,\n        todosVisible: getSortFied(todosDelet, prevState.sortField),\n      };\n    });\n  }\n\n  destroyAllComplete = () => {\n    this.setState((prevState) => {\n      const todosActive = prevState.todosVisible.filter(a => !a.completed);\n      return {\n        todos: todosActive,\n        todosVisible: getSortFied(todosActive, prevState.sortField),\n      };\n    });\n  }\n\n  render() {\n    const { todosVisible, sortFieldEvent, isCompletedHide } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          onSubmit={this.addTodo}\n        />\n\n        <TodoList\n          toggle={this.handleToggle}\n          deleteTodo={this.deleteTodo}\n          handleChackAll={this.handleChackAll}\n          todosVisible={todosVisible}\n        />\n        <Footer\n          sortField={sortFieldEvent}\n          handleFilterBy={this.handleFilterBy}\n          todosVisible={todosVisible}\n          isCompletedHide={isCompletedHide}\n          destroyAllComplete={this.destroyAllComplete}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}