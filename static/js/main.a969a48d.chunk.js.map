{"version":3,"sources":["TodoApp.js","Todo.js","App.js","index.js"],"names":["TodoApp","state","title","handleSubmit","event","preventDefault","onSubmit","_this","props","setState","handleChange","_event$target","target","name","value","Object","defineProperty","react_default","a","createElement","this","className","htmlFor","placeholder","onChange","type","React","Component","Todo","_ref","item","toggle","id","completed","onClick","checked","defaultProps","App","todos","addTodo","prevState","concat","toConsumableArray","Date","now","handleToggle","task","find","todo","handleChackAll","isTodoChecked","allCheckedTodos","forEach","_this2","src_TodoApp","style","display","some","map","src_Todo","key","filter","length","href","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a969a48d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.title);\n\n    this.setState({\n      title: '',\n    });\n  }\n\n    handleChange = (event) => {\n      const { name, value } = event.target;\n\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label\n            className=\"new-todo\"\n            htmlFor=\"new-todo-title\"\n          >\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleChange}\n              value={this.state.title}\n              name=\"title\"\n              type=\"text\"\n            />\n          </label>\n          <button type=\"submit\">\n          submit\n          </button>\n        </form>\n      );\n    }\n}\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ item, toggle }) => {\n  const { id, title, completed } = item;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onClick={() => toggle(id)}\n          checked={completed}\n        />\n        <label htmlFor=\"todo-2\">{title}</label>\n        <button type=\"button\" className=\"destroy\" />\n        <p>{completed}</p>\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport Todo from './Todo';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    completed: false,\n  }\n\n  addTodo = (title) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ],\n\n      completed: prevState.completed,\n    }));\n  };\n\n  handleToggle = (id) => {\n    this.setState((prevState) => {\n      const task = prevState.todos.find(todo => todo.id === id);\n      task.completed = !task.completed;\n\n      return {\n        todos: prevState.todos,\n      };\n    });\n  }\n\n  handleChackAll = (event) => {\n    const isTodoChecked = event.target.checked;\n\n    this.setState((prevState) => {\n      const allCheckedTodos = [\n        ...prevState.todos,\n      ];\n      allCheckedTodos.forEach(todo => (todo.completed = isTodoChecked));\n\n      return {\n        todos: allCheckedTodos,\n      };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoApp\n            onSubmit={this.addTodo}\n          />\n\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            className=\"toggle-all\"\n            id=\"toggle-all\"\n            checked={!(todos.some(todo => !todo.completed))}\n            onChange={this.handleChackAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {todos.map(todo => (\n              <Todo\n                key={todo.id}\n                item={todo}\n                toggle={this.handleToggle}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${todos.filter(todo => (!todo.completed)).length}\n            items left`}\n          </span>\n\n          <ul className=\"filters\">\n            {/* <TodosFilter /> */}\n            <li>\n              <a\n                href=\"#/\"\n                className=\"selected\"\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">\n                  All\n              </a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n          />\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}