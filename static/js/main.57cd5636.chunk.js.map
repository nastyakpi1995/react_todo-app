{"version":3,"sources":["TodoApp.js","Todo.js","TodosFilter.js","getSortFied.js","App.js","index.js"],"names":["TodoApp","state","title","handleSubmit","event","preventDefault","onSubmit","_this","props","setState","handleChange","_event$target","target","name","value","Object","defineProperty","react_default","a","createElement","this","className","htmlFor","placeholder","onChange","type","React","Component","Todo","_ref","item","toggle","deleteTodo","id","completed","checked","onClick","defaultProps","TodosFilter","handleFilterBy","sortField","Fragment","classNames","selected","href","activeClassName","getSortFied","todos","callBack","active","filter","App","todosVisible","sortFieldEvent","isCompletedHide","statusAllTodo","addTodo","prevState","concat","toConsumableArray","Date","now","handleToggle","task","find","todo","handleChackAll","map","objectSpread","todosDelet","destroyAllComplete","todosActive","_this2","_this$state","src_TodoApp","src_Todo","key","style","display","length","src_TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.57cd5636.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.title);\n\n    this.setState({\n      title: '',\n    });\n  }\n\n    handleChange = (event) => {\n      const { name, value } = event.target;\n\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label\n            className=\"new-todo\"\n            htmlFor=\"new-todo-title\"\n          >\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleChange}\n              value={this.state.title}\n              name=\"title\"\n              type=\"text\"\n            />\n          </label>\n          <button\n            type=\"submit\"\n            className=\"buttonHide\"\n          >\n          submit\n          </button>\n        </form>\n      );\n    }\n}\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ item, toggle, deleteTodo }) => {\n  const { id, title, completed } = item;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={() => toggle(id)}\n          checked={completed}\n        />\n        <label htmlFor=\"todo-2\">{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)}\n        />\n        <p>{completed}</p>\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodosFilter = ({ handleFilterBy, sortField }) => (\n  <>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'active',\n        })}\n        onClick={() => handleFilterBy('active')}\n        href=\"#/\"\n      >\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'all',\n        })}\n        activeClassName={sortField}\n        href=\"#/active\"\n        onClick={() => handleFilterBy('all')}\n      >\n      All\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'completed',\n        })}\n        href=\"#/completed\"\n        onClick={() => handleFilterBy('completed')}\n      >\n    Completed\n      </a>\n    </li>\n  </>\n);\n\nTodosFilter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","\nconst getSortFied = (todos, sortField) => {\n  if (sortField === 'all') {\n    return todos;\n  }\n\n  const callBackSort = {\n    active: a => !a.completed,\n    completed: a => a.completed,\n  };\n  const callBack = callBackSort[sortField];\n\n  return todos.filter(callBack);\n};\n\nexport default getSortFied;\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport Todo from './Todo';\nimport TodosFilter from './TodosFilter';\nimport getSortFied from './getSortFied';\n\nclass App extends React.Component {\n  state = {\n    todosVisible: [],\n    todos: [],\n    sortFieldEvent: 'all',\n    sortField: 'all',\n    isCompletedHide: 0,\n    statusAllTodo: true,\n  }\n\n  addTodo = (title) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos,\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ],\n      todosVisible: [...prevState.todosVisible, {\n        title,\n        id: Date.now(),\n        completed: false,\n      }],\n      completed: prevState.completed,\n    }));\n  };\n\n  handleFilterBy = (sortField) => {\n    this.setState(prevState => ({\n      sortFieldEvent: sortField,\n      todosVisible: getSortFied(prevState.todos, sortField),\n      sortField,\n    }));\n  }\n\n  handleToggle = (id) => {\n    this.setState((prevState) => {\n      const task = prevState.todosVisible.find(todo => todo.id === id);\n      task.completed = !task.completed;\n\n      if (task.completed) {\n        return {\n          isCompletedHide: 1,\n        };\n      }\n\n      return {\n        todosVisible: prevState.todosVisible,\n      };\n    });\n  }\n\n  handleChackAll = () => {\n    this.setState(prevState => ({\n      todosVisible: prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodo,\n      }\n      )),\n      isCompletedHide: 1,\n      statusAllTodo: !prevState.statusAllTodo,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState((prevState) => {\n      const todosDelet = prevState.todos.filter(todo => !(todo.id === id));\n      return {\n        todos: todosDelet,\n        todosVisible: getSortFied(todosDelet, prevState.sortField),\n      };\n    });\n  }\n\n  destroyAllComplete = () => {\n    this.setState((prevState) => {\n      const todosActive = prevState.todosVisible.filter(a => !a.completed);\n      return {\n        todos: todosActive,\n        todosVisible: getSortFied(todosActive, prevState.sortField),\n      };\n    });\n  }\n\n  render() {\n    const { todosVisible, sortFieldEvent } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <TodoApp\n            onSubmit={this.addTodo}\n          />\n\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle-all\"\n            id=\"toggle-all\"\n            onChange={this.handleChackAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {todosVisible.map(todo => (\n              <Todo\n                key={todo.id}\n                item={todo}\n                toggle={this.handleToggle}\n                deleteTodo={this.deleteTodo}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${todosVisible.filter(todo => !todo.completed).length}\n            items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <TodosFilter\n              sortField={sortFieldEvent}\n              handleFilterBy={this.handleFilterBy}\n            />\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.destroyAllComplete}\n          >\n            {this.state.isCompletedHide ? 'Clear completed' : ''}\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}