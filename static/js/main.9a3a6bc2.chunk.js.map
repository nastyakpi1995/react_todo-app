{"version":3,"sources":["TodoApp.js","TodosFilter.js","filteredForField.js","Footer.js","Todo.js","TodoList.js","App.js","index.js"],"names":["TodoApp","state","title","handleSubmit","event","preventDefault","onSubmit","_this","props","setState","handleChange","_event$target","target","name","value","Object","defineProperty","react_default","a","createElement","className","this","htmlFor","placeholder","onChange","type","React","Component","TodosFilter","_ref","handleFilterBy","sortField","Fragment","classNames","selected","onClick","href","activeClassName","filteredForField","todos","callBack","active","completed","toConsumableArray","filter","Footer","isCompletedHide","destroyAllComplete","todosVisible","concat","todo","length","src_TodosFilter","Todo","item","toggle","deleteTodo","id","checked","defaultProps","TodolList","handleChackAll","sortFieldEvent","map","src_Todo","key","App","statusAllTodo","addTodo","prevState","Date","now","field","handleToggle","task","find","objectSpread","_this$state","console","log","src_TodoApp","CachedTodoList","CachedFooter","memo","TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9a3a6bc2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.title);\n\n    this.setState({\n      title: '',\n    });\n  }\n\n    handleChange = (event) => {\n      const { name, value } = event.target;\n\n      this.setState({\n        [name]: value,\n      });\n    }\n\n    render() {\n      return (\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label\n              className=\"new-todo\"\n              htmlFor=\"new-todo-title\"\n            >\n              <input\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                onChange={this.handleChange}\n                value={this.state.title}\n                name=\"title\"\n                type=\"text\"\n              />\n            </label>\n            <button\n              type=\"submit\"\n              className=\"buttonHide\"\n            >\n          submit\n            </button>\n          </form>\n        </header>\n      );\n    }\n}\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodosFilter = ({ handleFilterBy, sortField }) => (\n  <>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'active',\n        })}\n        onClick={() => handleFilterBy('active')}\n        href=\"#/\"\n      >\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'all',\n        })}\n        activeClassName={sortField}\n        href=\"#/active\"\n        onClick={() => handleFilterBy('all')}\n      >\n      All\n      </a>\n    </li>\n    <li>\n      <a\n        className={classNames({\n          selected: sortField === 'completed',\n        })}\n        href=\"#/completed\"\n        onClick={() => handleFilterBy('completed')}\n      >\n    Completed\n      </a>\n    </li>\n  </>\n);\n\nTodosFilter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n};\n\nexport default TodosFilter;\n","const filteredForField = (todos, sortField) => {\n  if (sortField === 'all') {\n    return todos;\n  }\n\n  const callBackSort = {\n    active: a => !a.completed,\n    completed: a => a.completed,\n  };\n  const callBack = callBackSort[sortField];\n\n  return [...todos].filter(callBack);\n};\n\nexport default filteredForField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\nimport filteredForField from './filteredForField';\n\nconst Footer = ({\n  handleFilterBy, sortField, todos, isCompletedHide, destroyAllComplete,\n}) => {\n  const todosVisible = filteredForField(todos, sortField);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todosVisible.filter(todo => !todo.completed).length}\n        items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <TodosFilter\n          sortField={sortField}\n          handleFilterBy={handleFilterBy}\n        />\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={destroyAllComplete}\n      >\n        {isCompletedHide ? 'Clear completed' : ''}\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  sortField: PropTypes.string.isRequired,\n  handleFilterBy: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n  isCompletedHide: PropTypes.number.isRequired,\n  destroyAllComplete: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ item, toggle, deleteTodo }) => {\n  const { id, title, completed } = item;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={() => toggle(id)}\n          checked={completed}\n        />\n        <label htmlFor=\"todo-2\">{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)}\n        />\n        <p>{completed}</p>\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\nimport filteredForField from './filteredForField';\n\nconst TodolList = ({\n  toggle, deleteTodo, handleChackAll, todos, sortFieldEvent,\n}) => {\n  const todosVisible = filteredForField(todos, sortFieldEvent);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle-all\"\n        id=\"toggle-all\"\n        onChange={handleChackAll}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todosVisible.map(todo => (\n          <Todo\n            key={todo.id}\n            item={todo}\n            toggle={toggle}\n            deleteTodo={deleteTodo}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTodolList.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n  handleChackAll: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n  sortFieldEvent: PropTypes.string.isRequired,\n};\n\nTodolList.defaultProps = {\n  toggle: null,\n};\n\n// const CachedTodoList = React.memo(TodoList);\n\nexport default TodolList;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nimport Footer from './Footer';\n\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortFieldEvent: 'all',\n    isCompletedHide: 0,\n    statusAllTodo: true,\n  }\n\n  addTodo = (title) => {\n    this.setState((prevState) => {\n      const todosAdd = [...prevState.todos,\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ];\n\n      return {\n        todos: todosAdd,\n      };\n    });\n  };\n\n  handleFilterBy = (field) => {\n    this.setState({\n      sortFieldEvent: field,\n    });\n  }\n\n  handleToggle = (id) => {\n    this.setState((prevState) => {\n      const task = prevState.todos.find(todo => todo.id === id);\n      task.completed = !task.completed;\n\n      if (task.completed) {\n        return {\n          isCompletedHide: 1,\n        };\n      }\n\n      return {\n        todos: prevState.todos,\n      };\n    });\n  }\n\n  handleChackAll = () => {\n    this.setState((prevState) => {\n      const todoChakAll = prevState.todos.map(todo => ({\n        ...todo,\n        completed: prevState.statusAllTodo,\n      }\n      ));\n\n      return {\n        todos: todoChakAll,\n        isCompletedHide: 1,\n        statusAllTodo: !prevState.statusAllTodo,\n      };\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState((prevState) => {\n      const todosDelet = prevState.todos.filter(todo => todo.id !== id);\n\n      return {\n        todos: todosDelet,\n      };\n    });\n  }\n\n  destroyAllComplete = () => {\n    this.setState((prevState) => {\n      const todosActive = prevState.todos.filter(a => !a.completed);\n\n      return {\n        todos: todosActive,\n      };\n    });\n  }\n\n  render() {\n    const { todos, sortFieldEvent, isCompletedHide } = this.state;\n    console.log(todos);\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          onSubmit={this.addTodo}\n        />\n\n        <CachedTodoList\n          toggle={this.handleToggle}\n          deleteTodo={this.deleteTodo}\n          handleChackAll={this.handleChackAll}\n          todos={todos}\n          sortFieldEvent={sortFieldEvent}\n        />\n        <CachedFooter\n          sortField={sortFieldEvent}\n          handleFilterBy={this.handleFilterBy}\n          todos={todos}\n          isCompletedHide={isCompletedHide}\n          destroyAllComplete={this.destroyAllComplete}\n        />\n      </section>\n    );\n  }\n}\n\nconst CachedTodoList = React.memo(TodoList);\nconst CachedFooter = React.memo(Footer);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}